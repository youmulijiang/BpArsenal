---
title: 错误处理规范
---

# 错误处理规范

## 必须处理的异常
1. **API调用**: 所有MontoyaApi调用前检查isInitialized()
2. **文件操作**: 配置文件读写、临时文件创建
3. **外部命令**: 工具执行、进程启动
4. **UI操作**: Swing组件创建和事件处理

## 标准处理模式
```java
// API调用安全模式
if (ApiManager.getInstance().isInitialized()) {
    try {
        ApiManager.getInstance().getApi().logging().logToOutput("消息");
    } catch (Exception e) {
        // fallback处理
        System.err.println("日志记录失败: " + e.getMessage());
    }
}

// 工具执行异常处理
try {
    ToolExecutor.getInstance().executeHttpTool(tool, request);
} catch (Exception e) {
    handleError("工具执行失败", tool.getToolName(), e);
}
```

## 错误日志级别
- `logToError()` - 异常和错误信息
- `logToOutput()` - 正常执行日志和调试信息

## 用户提示原则
- 简洁明确的中文错误信息
- 提供可操作的解决建议
- 使用对话框显示重要错误
